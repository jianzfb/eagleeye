#include "eagleeye/common/EagleeyeMacro.h"
#include "eagleeye/framework/pipeline/AnyNode.h"
#include "eagleeye/framework/pipeline/SignalFactory.h"
#include "eagleeye/framework/pipeline/AnyPipeline.h"
#include "eagleeye/processnode/Placeholder.h"
#include "{{project}}_plugin.h"

namespace eagleeye{

/**
 * @brief register pipeline plugin
 * 
 */
EAGLEEYE_PIPELINE_REGISTER({{project}}, {{version}}, {{signature}});

/**
 * @brief configure pipeline plugin
 * 
 */
EAGLEEYE_BEGIN_PIPELINE_INITIALIZE({{project}})
// 1.step build datasource node
Placeholder<ImageSignal<Array<unsigned char, 3>>>* placeholder = new Placeholder<ImageSignal<Array<unsigned char, 3>>>();
placeholder->setPlaceholderSignalType(EAGLEEYE_SIGNAL_IMAGE);

// 2.step build your algorithm node
// for example:
// InstancePersonSegMRCNNNode* instance_person_seg_node = new InstancePersonSegMRCNNNode("maskrcnn", "GPU");
//

// 3.step add all node to pipeline
// 3.1.step add data source node
{{project}}->add(placeholder,"placeholder");
// 3.2.step add your algorithm node
// for example:
// {{project}}->add(instance_person_seg_node, "instance_person_seg_node");

// 4.step link all node in pipeline
// for example:
// {{project}}->bind("placeholder",0,"instance_person_seg_node",0);

EAGLEEYE_END_PIPELINE_INITIALIZE
}